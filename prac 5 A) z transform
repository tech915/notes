A)
clear;
//Z transform of [2 -1 3 2 1 0 2 3 -1]
clear;
clc;
close;
function[za]=ztransfer(sequence,n)
    z=poly(0,'z','r')
    za=sequence*(1/z)^n'
endfunction
x1=[2 -1 3 2 1 0 2 3 -1];
n=-4:4;
zz=ztransfer(x1,n);
//Display result in command window
disp(zz,"Z transform of sequence is: ");
disp('ROC is the entire plane except z=0 and z=%inf');

B)
clear;
//Z transform of [1,2,3,4,5,6,7]
clc;
function[za]=ztransfer(sequence,n)
    z=poly(0,'z','r')
    za=sequence*(1/z)^n'
endfunction
x=[1,2,3,4,5,6,7];
n1=0:length(x)-1;
X=ztransfer(x,n1);
disp('X(z)=');
disp(X)
funcprot(0);


C)
clear;
//Z transform of [1,2,3,4,5,6,7] using different range
clc;
function[za]=ztransfer(sequence,n)
    z=poly(0,'z','r')
    za=sequence*(1/z)^n'
endfunction
x=[1,2,3,4,5,6,7];
n1=-2:length(x)-3;
X=ztransfer(x,n1);
disp(X,'X(z)=');
funcprot(0);


D)
clear;
//Z transform of [1,2,3,4,5,0,7]
clc;
function[za]=ztransfer(sequence,n)
    z=poly(0,'z','r')
    za=sequence*(1/z)^n'
endfunction
x=[1,2,3,4,5,0,7];
n1=0:length(x)-1;
X=ztransfer(x,n1);
disp('X(z)=');
disp(X)
funcprot(0);

E)
clear;
//Z transform of[4,2,-1,0,3,-4]
clc;
function[za]=ztransfer(sequence,n)
    z=poly(0,'z','r')
    za=sequence*(1/z)^n'
endfunction
x=[4,2,-1,0,3,-4];
n1=-2:length(x)-3;
X=ztransfer(x,n1);
disp(X,"X(z)=");
funcprot(0);


F)
//Convolution of two signals x1 and x2
clc;
function[za]=ztransfer(sequence,n)
    z=poly(0,'z','r')
    za=sequence*(1/z)^n'
endfunction
x1=[1,-3,2];
n1=0:length(x1)-1;
X1=ztransfer(x1,n1);
x2=[1,2,1];
n2=0:length(x2)-1;
X2=ztransfer(x2,n2);
X=X1*X2;
disp(X,'X(z)=');
z=poly(0,'z');
X=[1;-z^-1;-3*z^-2;z^-3;2*z^-4];
n=0:4;
ZI=z^n';
x=(X.*ZI);
disp(x,'x[n]=');
