A) Write a Scilab program to solve the differential equation y' = (x+1)/y numerically. Plot both the analytical and numerical solutions. 
Compare the results by plotting the analytical solution y(x) = sqrt(x^2 + 2x + 0.01).


//Define x
x0 = 0;
xinc = 0.001;
xf = 1;
x = x0:xinc:xf;

//Calculate Analytical Solution
y = sqrt(x.^2 + 2*x + 0.01);

//Plot Analytical Solution
subplot(2,1,1);
plot(x, y);
xgrid;
ylabel('y(x)', 'fontsize', 2);
title('Analytic Solution', 'fontsize', 2);

//Define differential equation
deff('yprim=f(x, y)', 'yprim=(x+1)/y');

//Solve Differential Equation using ode
y0 = 0.1;
ydiff = ode(y0, x0, x, f);

//Plot Numeric Solution
subplot(2,1,2);
plot(x, ydiff, 'r');
xgrid;
title('Numeric Solution', 'fontsize', 2);
ylabel('y(x)', 'fontsize', 2);
xlabel('x', 'fontsize', 2);


B) Use Scilab's ode function to solve the non-linear differential equation dy/dt = y^2 - y*sin(t) + cos(t), where the initial condition is y(0) = 0. Plot the solution for t ∈ [0, π].

function ydot=f(t,y)
    ydot=y^2-y*sin(t)+cos(t)
endfunction
y0=0;
t0=0;
t=0:0.1:%pi;
y=ode(y0,t0,t,f);
plot(t,y)


C) Create a Scilab script to solve a system of linear differential equations given by x' = Ax + B, where A = [1 1; 0 2], B = [1; 1], and u(t, w) = sin(wt).
Use ode to solve the system and plot the solution for different time steps.

function xdot=linear(t,x,A,u,B,omega)
    xdot=A*x+B*u(t,omega)
endfunction
function ut=u(t,omega)
    ut=sin(omega*t)
endfunction
A=[1 1;0 2];
B=[1;1];
omega=5;
y0=[1;0];
t0=0;
t=[0.1,0.2,0.5,1];
ode(y0,t0,t,list(linear,A,u,B,omega))
plot(t,u);


D) Write a Scilab code to solve a second-order differential equation representing an RLC circuit. The equation is z'' = (u(t) - z)/(LC), where L = 0.001, R = 10, and C = 0.000001.
Simulate and plot the response of the circuit over the time interval t ∈ [0, 0.001] using the step function u(t).

function y=u(t)
    y=(sign(t)+1)/2
endfunction
L=0.001
R=10
C=0.000001
function zdot=f(t,y)
    zdot(1)=y(2);
    zdot(2)=(u(t)-y(1)-L*y(2)/R)/(L*C);
endfunction
y0=[0;0];
t0=0;
t=0:0.00001:0.001;
out=ode(y0,t0,t,f);
clf();
plot(out);
function y=u(t)
    y=(sign(t)+1)/2
endfunction
L=0.001
R=10
C=0.000001
function zdot=f(t,y)
    zdot=[y(2);(u(t)-y(1)-L*y(2)/R)/(L*C)];
endfunction
y0=[0;0];
t0=0;
t=0:0.00001:0.001;
out=ode(y0,t0,t,f);
clf();
subplot(211)
plot(t,out(1,:),"r.--");
subplot(212)
plot(t,out(2,:),"b-..");


E)Solve the second-order differential equation d^2x/dt^2 = 1/(t+1) + sin(t)√t, with initial conditions x(0) = 0 and dx/dt(0) = -2, 
using Scilab's ode function. Plot both x(t) and dx/dt over the range t ∈ [0, 5π].

function dx=f(t,x)
    dx(1)=x(2);
    dx(2)=1/(t+1)+sin(t)*sqrt(t);
endfunction

t=0:0.01:5*%pi;
t0=min(t);
y0=[0;-2];
y=ode(y0,t0,t,f);
plot(t,y(1,:),'LineWidth',2)
plot(t,y(2,:),'r','LineWidth',2)
xgrid();
xlabel('$t\quad [s]$','Fontsize',3)
ylabel('$f(t,x)$','Fontsize',3)
title(['Integration of' '$\frac{d^2 x}{dt^2}=\frac{1}{t+1}+sin(t)\sqrt{t}$'],'Fontsize',3)
legend(['$\Large{x}$' '$\Large{dx/dt}$'],2)


F)Write a Scilab program to solve the first-order differential equation dy/dx = e^(-x) with an initial condition y(0) = 0 using ode. 
Plot the numerical solution over the range x ∈ [0, 10].

funcprot(0)
clf;
function dx=f(x,y)
    dx=exp(-x);
endfunction
y0=0;
x0=0;
x=[0:0.5:10];
sol=ode(y0,x0,x,f);
plot2d(x,sol,5);
xlabel('x');
ylabel('y(x)');
xtitle('y(x) vs. x');

G)Using Scilab, solve the differential equation dy/dx = x^2 - e^(-x)y, with y(0) = 0. Plot the solution for x ∈ [0, 10].


funcprot(0);
clf;
function dx=f(x,y)
    dx=x^2-exp(-x)*y;
endfunction
y0=0;
x0=0;
x=[0:0.5:10];
sol=ode(y0,x0,x,f);
plot2d(x,sol,5);
xlabel('x');
ylabel('y(x)');
xtitle('y(x) vs. x')
